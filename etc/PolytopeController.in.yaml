---
# If true, the FSM transitions are managed by an external tool
Managed: false
# If true and the FSM is self-managed, transitions should be triggered
StepByStep: true
# Change idle behaviour, if true the state is kept until transition,
# otherwise the FSM holds the last state until transition
IdleKeepState: true
# Where to look for state libraries
StatesLibraries:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@"
# Where to look for state files
StatesFiles:
- "@MC_STATES_DEFAULT_RUNTIME_INSTALL_PREFIX@/data"
- "@MC_STATES_RUNTIME_INSTALL_PREFIX@/data"
# If true, state factory will be more verbose
VerboseStateFactory: false
ResetPostures: false

Limits:
  rhps1:
    R_SHOULDER_R:
      upper: -0.3

polytopeControllerInitPose:
  hrp4:
    translation:
      x: 0.1
      y: 0.
    rotation: [0.0, 0.0, -1.57]
  rhps1:
    translation:
      x: 0.1
      y: 0.
    rotation: [0.0, 0.0, -1.57]
  # rhps1_interact:
  #   translation:
  #     x:1.2
  #     y: 0.
  #   rotation: [0.0, 0.0, -3.14]

# Additional robots to load
robots:
  ground:
    module: env/ground
  wall:
    module: env/ground
    init_pos:
      translation: [0.75, -0.3, 1.0]
      # translation: [1.2, -0.6, 1.0]
      rotation: [0.0, -1.57, 0.0]
  # rhps1_interact:
  #   module: RHPS1_plate_plate
  # box:
  #   module: object/box
  #   init_pos:
  #     translation: [0.4, 0., 0.9]
  #     rotation: [0., 0., 0.]
# General constraints, always on
constraints:
- type: contact
- type: dynamics
  # damper: [0.4, 0.2, 1]
  #damper: [0.1, 0.01, 0.5]
  # damper is [interaction distance, safety distance, offset]
  damper: [0.1, 0.01, 0.5]
  velocityPercent: 1.0
  # infTorque: true
# - type: dynamics
#   robot: box
#   damper: [0.1, 0.01, 0.5]
# - type: dynamics
#   robot: rhps1_interact
#   damper: [0.1, 0.01, 0.5]
- type: compoundJoint
# Collision constraint
collisions:
- type: collision
  useCommon: true
# Initial set of contacts
contacts:
- r2: ground
  r1Surface: RightFoot
  r2Surface: AllGround
  dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
  friction: 0.7
- r2: ground
  r1Surface: LeftFoot
  r2Surface: AllGround
  dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
  friction: 0.7
# - r1: rhps1_interact
#   r2: ground
#   r1Surface: RightFoot
#   r2Surface: AllGround
#   dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
#   friction: 0.7
# - r1: rhps1_interact
#   r2: ground
#   r1Surface: LeftFoot
#   r2Surface: AllGround
#   dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
#   friction: 0.7
# Dummy contact to be removed, to fix box before grabbing it
# - r1: box
#   r2: ground
#   r1Surface: Bottom
#   r2Surface: AllGround
#   dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
#   friction: 0.7



DCM_VRPTask:
  type: DCM-VRP
  possibleContacts: [RightFoot, LeftFoot, RightHand]
  withPolytopeConstraints: true
  withAutoBalance: false
  zeroMomentAutoBalance: true
  tracker:
    P: 10
    I: 0
    D: 0
  robotMass:
    rhps1: 61.264
    hrp4: 35.178
    rhps1_plate_plate: 59.401
  tasks:
    CoM:
      weight: 10000
    Momentum:
      # Ideally we want 0 stiffness and only track Ldot (damping)
      # For now since we want static we still target 0 momentum (stiffness)
      stiffness: [3, 3, 5, 0, 0, 0]
      damping: [3, 3, 5, 0, 0, 0]
      weight: 10000
      dimWeight: [1, 1, 1, 0, 0, 0]
    CoP:
      admittance:
        couple: [0.03, 0.03, 0.]
        force: [0.001, 0.001, 0.0002]
      stiffness: 5
      damping: 150
      weight: 100000
      maxVel:
        angular: [3., 3., 3.]
        linear: [1., 1., 1.]

VRPTask:
  type: VRP
  above: [LeftFoot, RightFoot]
  weight: 100000
  stiffness: 5
  withBounding: false
  autoTarget:
    automatic: true
    startContacts:
      LeftFoot:
        minVal: 0.001
        maxVal: 0.8
        duration: 4.
        startVal: 1.
      RightFoot:
        minVal: 0.001
        maxVal: 0.8
        duration: 4.
        startVal: 1.
      LeftHand:
        minVal: 0.001
        maxVal: 0.15
        duration: 4.
      RightHand:
        minVal: 0.001
        maxVal: 0.1
        duration: 4.

VRPTask2:
  type: VRP
  robot: rhps1_interact
  above: [LeftFoot, RightFoot]
  weight: 100000
  stiffness: 5
  withBounding: false

DCMTask:
  type: DCM
  above: [LeftFoot, RightFoot]
  weight: 100000
  stiffness: 10

DynamicPolytope:
  mainRobot:
    withMoments: false
    computeRegions: false
    gui:
      # Color expressed as (r,g,b,a) array with values between 0 and 1.
      # May also be a string with a color name [white, black, red, green, blue, cyan, magenta, yellow, gray, lightgray].
      # See {% doxygen mc_rtc::gui::Color %}
      # General configuration
      polyhedronForce: &polyhedron
        triangle_color: [1.0, 0.0, 0.0, 0.2]
        show_triangle: true
        use_triangle_color: false
        edges:
          color: [0.75, 0.75, 0.75, 1.0]
          width: 0.002
          style: solid
        show_edges: true
        fixed_edge_color: true
        vertices:
          color: [0.0, 0.0, 0.5, 1.0]
          scale: 0.02
        show_vertices: false
        fixed_vertices_color: true
      polyhedronMoment:
        <<: *polyhedron
        triangle_color: [0.0, 0.0, 1.0, 0.2]
      polyhedronZMP:
        <<: *polyhedron
        triangle_color: [0.0, 1.0, 0.0, 0.2]
      polyhedronZeroMomentArea:
        <<: *polyhedron
        triangle_color: [0.7, 0.3, 0.0, 0.2]
    # Per-contact configuration
    contacts:
      LeftFoot:
        nbFrictionSides: 8
        gui:
          polyhedronMoment:
            <<: *polyhedron
            triangle_color: [0.0, 1.0, 0.0, 0.2]
            edges:
              color: [0.0, 0.5, 0.0, 0.6]
              # BUG: default width is not picked up when it is not redefined, need to put it manually
              width: 0.005
      RightFoot:
        nbFrictionSides: 8
        gui:
          polyhedronMoment:
            <<: *polyhedron
            triangle_color: [0.0, 0.0, 1.0, 0.2]
            edges:
              color: [0.0, 0.0, 0.5, 0.6]
              width: 0.005
      RightHand:
        nbFrictionSides: 8
        gui:
          polyhedronMoment:
            <<: *polyhedron
            triangle_color: [1.0, 0.0, 0.0, 0.2]
            edges:
              color: [0.5, 0., 0., 0.6]
              width: 0.005
          guiScale: 0.005
      LeftHand:
        nbFrictionSides: 8
        gui:
          polyhedronMoment:
            <<: *polyhedron
            triangle_color: [0.0, 1.0, 1.0, 0.2]
            edges:
              color: [0.0, 0.5, 0.5, 0.6]
              width: 0.005
          guiScale: 0.003 # Bigger gui scale for clearer display in experiment
  rhps1_interact:
    withMoments: false
    computeRegions: false
    gui:
      polyhedronForce: &polyhedron
        triangle_color: [1.0, 0.0, 0.0, 0.2]
        show_triangle: true
        use_triangle_color: false
        edges:
          color: [0.75, 0.75, 0.75, 1.0]
          width: 0.003
          style: solid
        show_edges: false
        fixed_edge_color: true
        vertices:
          color: [1.0, 0.0, 0.0, 1.0]
          scale: 0.02
        show_vertices: false
        fixed_vertices_color: true
      polyhedronMoment:
        <<: *polyhedron
        triangle_color: [0.0, 0.0, 1.0, 0.2]
      polyhedronZMP:
        <<: *polyhedron
        triangle_color: [0.0, 1.0, 0.0, 0.2]
      polyhedronZeroMomentArea:
        <<: *polyhedron
        triangle_color: [0.7, 0.3, 0.0, 0.2]


# Implement some additional text states
states:

  SoloVRP:
    base: MetaTasks
    tasks:
      VRPTask:
        type: VRP
        above: [LeftFoot, RightFoot]
        weight: 100000
        stiffness: 10

  SoloMomentum:
    base: MetaTasks
    tasks:
      MomentumTask:
        type: momentum

  PutHandsFront:
    base: MetaTasks
    tasks:
      RightHandTraj:
        type: transform
        frame: RightHand
        weight: 1000
        stiffness: 5
        target:
          rotation: [0., -1.57, 0.]
          translation: [0.4, -0.35, 1.]
        completion:
          eval: 0.01
      # LeftHandTraj:
      #   type: transform
      #   frame: LeftHand
      #   weight: 1000
      #   stiffness: 5
      #   target:
      #     rotation: [0., -1.57, 0.]
      #     translation: [0.4, 0.25, 1.]
      #   completion:
      #     eval: 0.01
    AddContactsAfter:
      - r2: ground
        r1Surface: RightHand
        r2Surface: AllGround
        dof: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
        friction: 0.8

  HandsFrontAndWallSafe:
    base: MetaTasks
    tasks:
      RightHandTraj: &right-hand-traj
        type: transform
        frame: RightHand
        weight: 1000
        stiffness: 3
        target:
          rotation: [0., -1., -1.57]
          # -y forward
          translation: [-0.2, -0.3, 1.1]
        completion:
          eval: 0.01
      LeftHandTraj:
        type: transform
        frame: LeftHand
        weight: 100
        stiffness: 3
        targetSurface:
          robot: wall
          surface: AllGround
          offset_translation: [0.2, -0.1, 0.1]
        completion:
          eval: 0.01
    AddCollisions:
      - r1: rhps1
        r2: wall
        collisions:
          - body1: L_WRIST_Y_LINK
            body2: ground
            iDist: 0.15
            sDist: 0.05
    RemoveCollisionsAfter:
      - r1: rhps1
        r2: wall
        collisions:
          - body1: L_WRIST_Y_LINK
            body2: ground
            iDist: 0.15
            sDist: 0.05

  HandsFrontAndWall:
    base: MetaTasks
    tasks:
      RightHandTraj: *right-hand-traj
      LeftHandTraj:
        type: transform
        frame: LeftHand
        weight: 1000
        stiffness: 5
        targetSurface:
          robot: wall
          surface: AllGround
          offset_translation: [0.2, -0.1, 0.]
        completion:
          eval: 0.01
    AddContactsAfter:
      # - r2: ground
      #   r1Surface: RightHand
      #   r2Surface: AllGround
      #   dof: [0.0, 0.0, 0.0, 0.0, 0.0, 0.0]
      #   friction: 0.7
      - r2: wall
        r1Surface: LeftHand
        r2Surface: AllGround
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        friction: 0.7

  HoldHandHalfSit:
    base: Parallel
    states: [HalfSitting, HoldHandsAdmi]

  HoldHandsAdmi:
    base: MetaTasks
    tasks:
      RightHandImpedance: &right-hand-impedance
        type: impedance
        frame: RightHand
        weight: 1000
        stiffness: 15
        target:
          rotation: [0., -1., -1.57]
          translation: [-0.3, 0.1, 1.1]
        wrench:
          couple: [0.0, 0.0, 0.0]
          force: [0.0, 0.0, 0.0]
        gains:
          mass:
            angular: [1.0, 1.0, 1.0]
            linear: [2.0, 2.0, 2.0]
          damper:
            angular: [200.0, 200.0, 200.0]
            linear: [1000.0, 1000.0, 1000.0]
          spring:
            angular: [200.0, 200.0, 200.0]
            linear: [1000.0, 1000.0, 1000.0]
          wrench:
            angular: [60.0, 60.0, 60.0]
            linear: [20.0, 20.0, 20.0]
      # RightHandAdmi:
      #   type: admittance
      #   frame: RightHand
      #   weight: 100
      #   stiffness: 5
      #   wrench:
      #     couple: [0.0, 0.0, 0.0]
      #     force: [0.0, 0.0, 0.0]
      #   admittance:
      #     couple: [0.15, 0.15, 0.15]
      #     force: [0.01, 0.01, 0.01]
      # LeftHandAdmi:
      #   type: admittance
      #   frame: LeftHand
      #   weight: 100
      #   stiffness: 5
      #   wrench:
      #     couple: [0.0, 0.0, 0.0]
      #     force: [0.0, 0.0, 0.0]
      #   admittance:
      #     couple: [0.0, 0.0, 0.0]
      #     force: [0.0, 0.0, 0.005]

  RemoveLeftFoot:
    base: MetaTasks
    RemoveContacts:
      - r2: ground
        r1Surface: LeftFoot
        r2Surface: AllGround
    tasks:
      LeftFootLift: &left-foot-transform-task
        type: transform
        frame: LeftFoot
        stiffness: 5
        move:
          translation: [0., 0., 0.1]
        completion:
          eval: 0.02
      RightHandImpedance: *right-hand-impedance
      # RightHandAdmi:
      #   type: admittance
      #   frame: RightHand
      #   weight: 100
      #   stiffness: 5
      #   wrench:
      #     couple: [0.0, 0.0, 0.0]
      #     force: [0.0, 0.0, 0.0]
      #   admittance:
      #     couple: [0.15, 0.15, 0.15]
      #     force: [0.01, 0.01, 0.01]
    AddCollisionsAfter:
      - r1: rhps1
        r2: ground
        collisions:
          - body1: L_ANKLE_P_LINK
            body2: ground
            iDist: 0.15
            sDist: 0.1
      - r1: rhps1
        r2: wall
        collisions:
          - body1: L_ANKLE_P_LINK
            body2: ground
            iDist: 0.05
            sDist: 0.01

  HoldHandsAdmiNoFoot:
    base: MetaTasks
    tasks:
      RightHandImpedance: *right-hand-impedance
      LeftFootLift:
        <<: *left-foot-transform-task
        weight: 5
        stiffness: 1
      # RightHandAdmi:
      #   type: admittance
      #   frame: RightHand
      #   weight: 100
      #   stiffness: 5
      #   wrench:
      #     couple: [0.0, 0.0, 0.0]
      #     force: [0.0, 0.0, 0.0]
      #   admittance:
      #     couple: [0.15, 0.15, 0.15]
      #     force: [0.01, 0.01, 0.01]

  PositionLeftFoot:
    base: MetaTasks
    tasks:
      LeftFootPose:
        type: transform
        frame: LeftFoot
        targetSurface:
          surface: RightFoot
          offset_translation: [0.0, 0.2, 0.1]

  PutBackLeftFoot:
    base: MetaTasks
    RemoveCollisions:
      - r1: rhps1
        r2: ground
        collisions:
          - body1: L_ANKLE_P_LINK
            body2: ground
            iDist: 0.15
            sDist: 0.1
    tasks:
      LeftFootAdmi:
        type: admittance
        frame: LeftFoot
        wrench:
          couple: [0.0, 0.0, 0.0]
          force: [0.0, 0.0, 10.0]
        admittance:
          couple: [0.0, 0.0, 0.0]
          force: [0.00, 0.00, 0.01]
    AddContactsAfter:
      - r2: ground
        r1Surface: LeftFoot
        r2Surface: AllGround
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        friction: 0.7


  ContactWall:
    base: MetaTasks
    tasks:
      RightHandTraj:
        type: transform
        frame: RightHand
        weight: 1000
        stiffness: 5
        targetSurface:
          robot: wall
          surface: TableTop
          # offset_translation: [-0.05, -0.2, 0.0]
          # offset_rotation: [0.0, -1.57, 0.0]
        completion:
          eval: 0.01
      # CoM:
      #   type: com
      #   above: [LeftFoot, RightFoot]
      #   weight: 2000
      #   stiffness: 5
    AddContactsAfter:
      - r2: wall
        r1Surface: RightHand
        r2Surface: TableTop
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        friction: 0.8

  TouchHands:
    base: MetaTasks
    tasks:
      RightHandTrajR1:
        type: transform
        frame: RightHand
        weight: 1000
        stiffness: 5
        target:
          rotation: [0., -1.57, 0.]
          translation: [0.65, -0.3, 1.]
        completion:
          eval: 0.01
      LeftHandTrajR2:
        type: transform
        robot: rhps1_interact
        frame: LeftHand
        weight: 1000
        stiffness: 5
        target:
          rotation: [0., -1.57, 3.14]
          translation: [0.65, -0.3, 1.]
        completion:
          eval: 0.01
    AddContactsAfter:
      - r2: rhps1_interact
        r1Surface: RightHand
        r2Surface: LeftHand
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        friction: 0.8

  GrabBox:
    base: MetaTasks
    tasks:
      RightHandTraj:
        type: transform
        frame: RightHand
        weight: 1000
        stiffness: 5
        targetFrame:
          robot: box
          frame: Left
          offset:
            translation: [0.0, 0.0, 0.0]
            rotation: [3.14, 0.0, -1.57]
        completion:
          eval: 0.01
      LeftHandTraj:
        type: transform
        frame: LeftHand
        weight: 1000
        stiffness: 5
        targetFrame:
          robot: box
          frame: Right
          offset:
            translation: [0.0, 0.0, 0.0]
            rotation: [3.14, 0.0, 1.57]
        completion:
          eval: 0.01
    AddContactsAfter:
      - r2: box
        r1Surface: RightHand
        r2Surface: Left
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        friction: 0.7
      - r2: box
        r1Surface: LeftHand
        r2Surface: Right
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        friction: 0.7
    RemoveContactsAfter:
      - r1: box
        r2: ground
        r1Surface: Bottom
        r2Surface: AllGround

  GrabBoxUnder:
    base: MetaTasks
    tasks:
      RightHandTraj:
        type: transform
        frame: RightHand
        weight: 1000
        stiffness: 5
        targetFrame:
          robot: box
          frame: Bottom
          offset:
            translation: [0.0, 0.0, 0.0]
            rotation: [3.14, 0.0, 4.71]
        completion:
          eval: 0.01
    AddContactsAfter:
      - r2: box
        r1Surface: RightHand
        r2Surface: Bottom
        dof: [1.0, 1.0, 1.0, 1.0, 1.0, 1.0]
        friction: 0.7
    RemoveContactsAfter:
      - r1: box
        r2: ground
        r1Surface: Bottom
        r2Surface: AllGround

  VRPBox:
    base: MetaTasks
    tasks:
      BoxVRP:
        type: VRP
        robot: box
        withBounding: false
        weight: 100000
        stiffness: 5


# Transitions map
transitions:
# Initial states
- [EstimateMass, OK, PolytopeController_Initial, Auto]
# - [PolytopeController_Initial, OK, ContactWall, Strict]
# - [PolytopeController_Initial, OK, SoloVRP, Strict]
# - [PolytopeController_Initial, OK, SoloMomentum, Auto]
# - [PolytopeController_Initial, OK, TouchHands, Strict]
# - [PolytopeController_Initial, OK, GrabBox, Strict]
# - [PolytopeController_Initial, OK, VRPBox, Strict]
# - [PolytopeController_Initial, OK, GrabBoxUnder, Strict]
# - [PolytopeController_Initial, OK, PutHandsFront, Strict]
- [PolytopeController_Initial, OK, HandsFrontAndWallSafe, Strict]
# Solo robot states
- [ContactWall, OK, Pause, Strict]
- [PutHandsFront, OK, HoldHandsAdmi, Strict]
- [HandsFrontAndWallSafe, OK, HandsFrontAndWall, Strict]
- [HandsFrontAndWall, OK, HoldHandsAdmi, Strict]
- [HoldHandsAdmi, OK, RemoveLeftFoot, Strict]
- [RemoveLeftFoot, OK, HoldHandsAdmiNoFoot, Strict]
- [HoldHandsAdmiNoFoot, OK, PositionLeftFoot, Strict]
- [PositionLeftFoot, OK, PutBackLeftFoot, Strict]
- [PutBackLeftFoot, OK, HoldHandHalfSit, Strict]
# Grab box states
- [GrabBox, OK, VRPBox, Strict]
- [GrabBoxUnder, OK, VRPBox, Strict]
# Dual robot states
- [TouchHands, OK, Pause, Strict]

# Initial state
init: PolytopeController_Initial

rhps1:
  posture:
    stiffness: 1
    weight: 10


Plugins: [ForceShoePlugin]

ObserverPipelines:
- name: MainRobPipeline                    # - Create a new pipeline
  gui: true                              #   diplay the pipeline in the GUI (default = false)
  log: true                              #   log observers (default)
  observers:                             #   declare which observers to use
  - type: Encoder                        # - Use an EncoderObserver
    config:
      position: encoderValues            #    - Sets joint position from encoder sensor values (default)
      velocity: encoderFiniteDifferences #    - Computes joint velocities by finite differences  (default)
      computeFV: true                    # We now have the estimation of each joint position and velocity and the corresponding body positions and velocities, but we are still missing the floating base
  - type: Attitude
    config:
      bodySensor: Accelerometer
  - type: KinematicInertial              # - Estimates the floating base state using the KinematicInertial observer
    update: true                         #   update the real robot instance from its results
    gui: true                            #   Displays the estimated velocity as an arrow (default)
    config:
      bodySensor: Accelerometer          # This observer only uses roll and pitch rotation information from this sensor along with a kinematic anchor point and the robot kinematics between the anchor frame and the floating base frame.
# - name: BoxPipeline
#   gui: true
#   log: true
#   observers:
#   - type: BodySensor                     # - Use a BodySensor observer
#     update: true                        #   Update the real robot state
#     gui: true                           #   Display in the gui
#     config:
#       robot: box
#       bodySensor: FloatingBase
